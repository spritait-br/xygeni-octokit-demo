# This is a basic workflow to help you get started with Actions

name: Build (safe)

# Controls when the workflow will run
on:
    #push:
    #  branches: [ "main" ]
    # Triggers the workflow on pull request events for the "main" branch
    pull_request:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab sd
    workflow_dispatch:
        inputs:
            #dep-malware:
            #  type: boolean
            #  description: Incluir Malware
            #  default: false
            dep-name:
                description: "Dep. Name"
                required: true
                default: "octokit"
            dep-version:
                description: "Dep. Version"
                required: true
                default: "latest"
                #default: '3.2.0'

env:
    XYGEN_TOKEN: ${{ secrets.XYGEN_TOKEN }}
    XY_URL: ${{ secrets.XY_URL_DEMO }}
    XY_PRJ_NAME: GitHub-${{ github.event.repository.name }}
    PKG_NAME: ${{ github.event.inputs.dep-name }}
    PKG_VERSION: ${{ github.event.inputs.dep-version }}
    #PKG_MALWARE: ${{ github.event.inputs.dep-malware }}
    NEW_DEP_VERSION: 4.0.3

jobs:
    #
    build_app:
        needs: xygeni_security_gate
        runs-on: ubuntu-latest

        steps:
            - name: Building app
              run: |
                  echo "Simulation of building"
                  mw="$PKG_NAME-$PKG_VERSION"
                  text="Building app with no malware dep detected. "
                  echo "::notice $mw::$text"

    #
    xygeni_security_gate:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        # ref: "refs/pull/${{ github.event.number }}/merge"
        # ref: ${{ github.event.pull_request.head.sha }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4
              name: Checking out PR code
              if: ${{ github.event_name == 'pull_request_target' }}
              with:
                  # Number of commits to fetch. 0 indicates all history for all branches and tags.
                  # Default: 1
                  fetch-depth: "0"
                  # This is to get the PR code instead of the repo code
                  ref: ${{ github.event.pull_request.head.sha }}

            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v4
              name: Checking out main code
              if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
              with:
                  # Number of commits to fetch. 0 indicates all history for all branches and tags.
                  # Default: 1
                  fetch-depth: "0"

            # Runs a set of commands using the runners shell
            - name:
                  Download Xygeni Scanner
                  #curl -L https://get.xygeni.io/latest/scanner/install.sh | /bin/bash -s -- -u $XY_USERNAME -p $XY_PASSWORD -s $XY_URL -d ${GITHUB_WORKSPACE}/scanner
              run: |
                  echo Downloading Xygeni Scanner ....
                  curl -L https://get.xygeni.io/latest/scanner/install.sh | /bin/bash -s -- -t $XYGENI_TOKEN -d ${GITHUB_WORKSPACE}/scanner

            # Runs a set of commands using the runners shell
            - name: Execution Xygeni Scanner (vuln)
              run: |
                  set +e
                  rm ./package-lock.json
                  cat ${GITHUB_WORKSPACE}/package.json 
                  npm -v
                  echo Executing Xygeni scan ....    
                  #${GITHUB_WORKSPACE}/scanner/xygeni scan --fail-on=critical --run="inventory,misconf,deps,suspectdeps" --no-conf-download -n ${{ env.XY_PRJ_NAME }} --dir ${GITHUB_WORKSPACE} -e **/scanner/** --skip-detectors=any=low
                  ${GITHUB_WORKSPACE}/scanner/xygeni scan  -f none \
                          --fail-on="file:${GITHUB_WORKSPACE}/GuardRails/deps-critical.xyflow" \
                          --run="inventory,misconf,deps,suspectdeps" --no-conf-download \
                          -n ${{ env.XY_PRJ_NAME }} --dir ${GITHUB_WORKSPACE} -e **/scanner/** --skip-detectors=any=low
                  #${GITHUB_WORKSPACE}/scanner/xygeni scan --fail-on=file:${GITHUB_WORKSPACE}/lgv.xyflow --include-collaborators -f none --run="inventory,misconf,codetamper" --no-conf-download -n ${{ env.XY_PRJ_NAME }} --dir ${GITHUB_WORKSPACE} -e **/scanner/**
                  retVal=$?
                  if [ $retVal -ne 0 ]; then
                    echo "======================================="
                    echo "Detected usage of Dep with Malware !!!! "
                    echo " => Dep. Name:    $PKG_NAME"
                    echo " => Dep. Version: $PKG_VERSION"
                    echo "Breaking the build to avoid malware !!!! "
                    echo "======================================="
                    text="Detected usage of Dependency ($mw) with Malware !!!! "
                    #echo "::error file=app.js,line=10,col=15::$text"
                    echo "::error $mw::$text"
                    text="Breaking the build to avoid malware infection !!!! "
                    #echo "::error file=app.js,line=10,col=15::$text"
                    echo "::error $mw::$text"
                  fi
                  text="No dependencies with malware detected!!!! "
                  echo "::notice $mw::$text"

                  exit $retVal
              env:
                  GITHUB_PAT: ${{ secrets.GH_PAT }}
